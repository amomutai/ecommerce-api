generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model cart {
  id         String       @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String       @db.Uuid
  created_at DateTime     @default(now()) @db.Timestamp(6)
  users      users        @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  cart_items cart_items[]
}

model cart_items {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  cart_id    String   @db.Uuid
  product_id String   @db.Uuid
  quantity   Int      @default(1)
  created_at DateTime @default(now()) @db.Timestamp(6)
  cart       cart     @relation(fields: [cart_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([cart_id, product_id])
}

model categories {
  id          String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  title       String     @unique @db.VarChar(255)
  description String?
  created_at  DateTime   @default(now()) @db.Timestamp(6)
  products    products[]
}

model order_items {
  id            String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_id      String   @db.Uuid
  product_id    String   @db.Uuid
  amount_to_pay BigInt
  quantity      Int      @default(1)
  created_at    DateTime @default(now()) @db.Timestamp(6)
  orders        orders   @relation(fields: [order_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model orders {
  id           String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  order_number BigInt        @default(autoincrement())
  user_id      String        @db.Uuid
  created_at   DateTime      @default(now()) @db.Timestamp(6)
  order_items  order_items[]
  users        users         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model product_details {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  product_id String   @unique @db.Uuid
  info       String
  created_at DateTime @default(now()) @db.Timestamp(6)
  products   products @relation(fields: [product_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model products {
  id              String           @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  category_id     String           @db.Uuid
  name            String           @unique @db.VarChar(255)
  price           BigInt           @default(0)
  available       Boolean          @default(true)
  description     String?
  image_url       String           @default("") @db.VarChar(255)
  created_at      DateTime         @default(now()) @db.Timestamp(6)
  cart_items      cart_items[]
  product_details product_details?
  categories      categories       @relation(fields: [category_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model users {
  id         String   @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  full_name  String   @db.VarChar(255)
  email      String   @unique @db.VarChar(255)
  phone      String   @unique @db.VarChar(255)
  password   String   @db.VarChar(255)
  address    String   @db.VarChar(255)
  created_at DateTime @default(now()) @db.Timestamp(6)
  cart       cart[]
  orders     orders[]
}
